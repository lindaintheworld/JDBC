package book.mvc.view;

import java.sql.Date;
import java.util.List;
import java.util.Scanner;

import book.model.vo.Book;
import book.mvc.controller.BookController;

public class BookMenu {
	
	/*: 메뉴 방식으로 실행되게 함. 
	각 메소드가 사용할 데이터는 별도의 입력용 메소드를 작성하고,
	리턴된 객체나 값을 argument 로 사용할 것
	//: 메뉴 반복 출력 처리함
	*/	
	//의존성 주입
	private Scanner sc = new Scanner(System.in);
	private BookController bc = new BookController();
	
	public void displayMenu() {
		

	
	do {
	
	System.out.println("\n*** 도서 관리 프로그램 ***");
	System.out.println("1. 도서 추가 ");
	System.out.println("2. 도서 정보 수정 ");
	System.out.println("3. 도서 삭제 ");
	System.out.println("4. 도서 아이디로 조회 ");
	System.out.println("5. 도서 제목으로 조회  ");
	System.out.println("6. 도서 목록 전체 조회  ");
	System.out.println("9. 끝내기 ");
	System.out.println("번호 선택 : ");
	int no = sc.nextInt();
	
	switch(no) {
	case 1 : bc.insertBook(inputBook()); break;
	case 2 : bc.updateBook(inputBook(new Book())); break;
	case 3 : bc.deleteBook(inputBookId()); break;
	case 4 : displayBook(bc.searchBook(inputBookId())); break;
	case 5 : bc.searchBookTitle(inputBookTitle()); break;
	case 6 : displayBooks(bc.selectAll()); break;
	case 9 : System.out.print("\n종료(y), 취소(n) : ");
		if (sc.next().toUpperCase().charAt(0) == 'Y')
			return; // main() 으로 돌아감
		else
			break; // 메뉴 다시 반복
	default : System.out.println("잘못된 번호를 입력했습니다.");
			
	}
	
	} while(true);
	}
	//=> 새 도서정보 키보드 입력용
	public Book inputBook()	{
		Book b = new Book();
		System.out.println("도서 제목 입력 : ");
		b.setTitle(sc.next());
		System.out.println("도서 작가 입력 :");
		b.setAuthor(sc.next());
		System.out.println("출판사 입력 : ");
		b.setPublisher(sc.next());
		System.out.println("출판 날짜 입력[yyyy-MM-dd] : ");
		b.setPublisherDate(Date.valueOf(sc.next()));
		System.out.println("가격 입력 : ");
		b.setPrice(sc.nextInt());
		
		return b;
	}
	//=> 수정도서정보 키보드 입력용
	public Book inputBook(Book b)  {

		System.out.println("수정할 도서 제목을 입력하세요. ");
		System.out.println("수정할 도서 제목 입력 : ");
		b.setTitle(sc.next());
		
		System.out.println("수정할 가격 입력 : ");
		b.setPrice(sc.nextInt());
		
		return b;
	}
	//	=> 검색/삭제할 도서 아이디 입력용
	public int inputBookId() {
		System.out.println("삭제/조회할 도서 아이디 입력 : ");
		
		return sc.nextInt();
	}
	//=> 도서제목 키보드 입력용
	public String inputBookTitle() {
		System.out.println("검색할 도서 제목 입력 : ");
		
		return sc.next();
	}
	//=> 도서목록 출력용
	public void displayBooks(List<Book> list) {
		System.out.print("\n현재 조회된 책 수는 " + 
				list.size() + "권입니다.");
		System.out.println();
	
	for(Book b : list)
		System.out.println(b/*.toString()*/);
		
	}
	//=> 도서 출력용
	public void displayBook(Book b)	{
		System.out.println("조회한 책의 정보는 다음과 같습니다.");

		System.out.println(b);
	
	}
	//=> 에러메세지 출력용
	//public void displayError(String message) {}
	 

	
}
